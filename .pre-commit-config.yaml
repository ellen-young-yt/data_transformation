# Pre-commit configuration for dbt data transformation project
# See https://pre-commit.com for more information
# See https://pre-commit.com/hooks.html for more hooks

default_language_version:
  python: python3.12

repos:
  # General file checks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.5.0
    hooks:
      - id: trailing-whitespace
        exclude: '\.sql$' # SQL files may need trailing whitespace
      - id: end-of-file-fixer
        exclude: '\.sql$'
      - id: check-yaml
        args: [--allow-multiple-documents]
      - id: check-json
      - id: check-toml
      - id: check-added-large-files
        args: [--maxkb=1000]
      - id: check-case-conflict
      - id: check-merge-conflict
      - id: debug-statements
      - id: detect-private-key
        exclude: '^(README\.md|\.env\.example)$'
      - id: mixed-line-ending
        args: [--fix=lf]

  # Python code formatting and linting
  - repo: https://github.com/psf/black
    rev: 23.12.1
    hooks:
      - id: black
        language_version: python3.12
        args: [--config=pyproject.toml]

  - repo: https://github.com/pycqa/isort
    rev: 5.13.2
    hooks:
      - id: isort
        args: [--settings-path=pyproject.toml]

  - repo: https://github.com/pycqa/flake8
    rev: 7.0.0
    hooks:
      - id: flake8
        additional_dependencies: [flake8-docstrings]

  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.8.0
    hooks:
      - id: mypy
        additional_dependencies: [types-PyYAML]
        args: [--config-file=pyproject.toml]
        exclude: "^(dbt_packages/|transform/|target/|logs/)"

  # SQL linting with SQLFluff
  - repo: https://github.com/sqlfluff/sqlfluff
    rev: 3.0.7
    hooks:
      - id: sqlfluff-lint
        additional_dependencies:
          [
            "sqlfluff-templater-dbt",
            "dbt-core==1.10.11",
            "dbt-snowflake==1.10.2",
          ]
        args: [--config=.sqlfluff, --templater=raw]
        files: '^models/.*\.sql$'
        exclude: "^(dbt_packages/|target/|logs/|transform/)"
      - id: sqlfluff-fix
        additional_dependencies:
          [
            "sqlfluff-templater-dbt",
            "dbt-core==1.10.11",
            "dbt-snowflake==1.10.2",
          ]
        args: [--config=.sqlfluff, --templater=raw]
        files: '^models/.*\.sql$'
        exclude: "^(dbt_packages/|target/|logs/|transform/)"

  # YAML formatting with Prettier
  - repo: https://github.com/pre-commit/mirrors-prettier
    rev: v4.0.0-alpha.8
    hooks:
      - id: prettier
        types_or: [yaml, markdown]
        exclude: '^(dbt_packages/|target/|logs/|\.github/)'

  # Security checks
  - repo: https://github.com/Yelp/detect-secrets
    rev: v1.4.0
    hooks:
      - id: detect-secrets
        args: ["--baseline", ".secrets.baseline"]
        exclude: '^(dbt_packages/|transform/|target/|logs/|node_modules/|\.env\.example|\.secrets\.baseline)'

  # Python security checks
  - repo: https://github.com/PyCQA/bandit
    rev: 1.7.5
    hooks:
      - id: bandit
        additional_dependencies: ["pbr"]
        args: ["--configfile", ".bandit", "-r", "scripts/"]
        pass_filenames: false
        always_run: true

  # Local testing hooks
  - repo: local
    hooks:
      # dbt parsing/compilation check
      - id: dbt-parse
        name: dbt parse
        entry: make compile ENV=dev
        language: system
        types: [sql]
        pass_filenames: false
        always_run: true
        verbose: true

      # Environment validation
      - id: env-validation
        name: environment validation
        entry: make validate
        language: system
        files: "^(scripts/|\\.env\\.example|pyproject\\.toml|requirements\\.txt).*"
        pass_filenames: false

      # Python syntax and style validation
      - id: python-syntax
        name: python syntax and import check
        entry: python -m py_compile
        language: system
        types: [python]
        files: "^scripts/.*\\.py$"

      # Project structure validation
      - id: project-structure
        name: project structure validation
        entry: make validate
        language: system
        files: "^(dbt_project\\.yml|profiles/profiles\\.yml|Makefile|\\.env\\.example|\\.github/).*"
        pass_filenames: false
        always_run: true

# Enhanced configuration for CI integration
ci:
  autofix_commit_msg: |
    [pre-commit.ci] auto fixes from pre-commit.com hooks

    for more information, see https://pre-commit.ci
  autofix_prs: true
  autoupdate_branch: ""
  autoupdate_commit_msg: "[pre-commit.ci] pre-commit autoupdate"
  autoupdate_schedule: weekly
  # Skip hooks that require AWS credentials or are too slow for pre-commit.ci
  skip: [dbt-parse]
  submodules: false

# Environment-specific configuration
default_install_hook_types: [pre-commit, pre-push, commit-msg]
default_stages: [commit, push]
minimum_pre_commit_version: "3.0.0"

# Fail fast - stop on first failure for faster feedback
fail_fast: false # Set to true for faster local development
