name: 'Setup Python Environment'
description: 'Set up Python environment with caching and dependency installation'

inputs:
  python-version:
    description: 'Python version to use'
    required: false
    default: '3.12'
  install-dependencies:
    description: 'Whether to install Python dependencies'
    required: false
    default: 'true'
  cache-key-suffix:
    description: 'Additional suffix for cache key'
    required: false
    default: ''
  upgrade-pip:
    description: 'Whether to upgrade pip to latest version'
    required: false
    default: 'true'
  checkout-code:
    description: 'Whether to checkout code before setup'
    required: false
    default: 'false'

outputs:
  python-version:
    description: 'The Python version that was installed'
    value: ${{ steps.setup-python.outputs.python-version }}
  cache-hit:
    description: 'Whether dependencies were restored from cache'
    value: ${{ steps.cache-dependencies.outputs.cache-hit }}
  python-path:
    description: 'Path to Python executable'
    value: ${{ steps.setup-python.outputs.python-path }}
  pip-cache-dir:
    description: 'Directory where pip stores its cache'
    value: ${{ steps.pip-cache.outputs.dir }}

runs:
  using: 'composite'
  steps:
    - name: Checkout code
      if: inputs.checkout-code == 'true'
      uses: actions/checkout@v4

    - name: Set up Python
      id: setup-python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ inputs.python-version }}

    - name: Get pip cache directory
      id: pip-cache
      shell: bash
      run: |
        echo "dir=$(pip cache dir)" >> $GITHUB_OUTPUT

    - name: Cache pip dependencies
      id: cache-dependencies
      uses: actions/cache@v3
      with:
        path: |
          ${{ steps.pip-cache.outputs.dir }}
          ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ inputs.python-version }}-${{ hashFiles('**/requirements.txt') }}${{ inputs.cache-key-suffix }}
        restore-keys: |
          ${{ runner.os }}-pip-${{ inputs.python-version }}-
          ${{ runner.os }}-pip-

    - name: Upgrade pip
      if: inputs.upgrade-pip == 'true'
      shell: bash
      run: python -m pip install --upgrade pip

    - name: Install dependencies
      if: inputs.install-dependencies == 'true'
      shell: bash
      run: make install

    - name: Cache Python virtual environment
      uses: actions/cache@v3
      with:
        path: |
          transform/
          .venv/
        key: ${{ runner.os }}-venv-${{ inputs.python-version }}-${{ hashFiles('**/requirements.txt', '**/pyproject.toml') }}${{ inputs.cache-key-suffix }}
        restore-keys: |
          ${{ runner.os }}-venv-${{ inputs.python-version }}-
          ${{ runner.os }}-venv-

    - name: Validate Python installation
      shell: bash
      run: |
        echo "Python version: $(python --version)"
        echo "Pip version: $(pip --version)"
        echo "Python path: $(which python)"
        echo "Pip path: $(which pip)"
