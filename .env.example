# =============================================================================
# Environment Configuration Template
# =============================================================================
# Copy this file to .env and fill in your actual values
# Never commit .env to version control - it contains sensitive information

# =============================================================================
# Environment Settings
# =============================================================================
# Environment: dev, staging, or prod
ENVIRONMENT=dev

# Use AWS Secrets Manager instead of .env for credentials (optional)
# Set to true to force AWS secrets usage in development
USE_AWS_SECRETS=true

# =============================================================================
# Snowflake Connection Settings
# =============================================================================
# Your Snowflake account identifier
SNOWFLAKE_ACCOUNT=your_account.region

# =============================================================================
# dbt Configuration
# =============================================================================
# dbt profiles directory (usually leave as default)
DBT_PROFILES_DIR=./profiles

# dbt project directory (usually leave as default)
DBT_PROJECT_DIR=.

# dbt target environment (dev, test, prod)
DBT_TARGET=dev

# =============================================================================
# AWS Configuration (for production deployment)
# =============================================================================
# AWS region for your resources
AWS_REGION=us-east-2

# AWS account ID (for ECR repository)
AWS_ACCOUNT_ID=123456789012

# ECR repository name
ECR_REPOSITORY_NAME=data-transformation

# AWS Secrets Manager secret name pattern
# The environment will be automatically substituted
AWS_SECRET_NAME=ellen-young-yt/${ENVIRONMENT}/snowflake/credentials

# =============================================================================
# Development Settings
# =============================================================================
# Python version (for development)
PYTHON_VERSION=3.12

# Enable debug mode for detailed logging
DEBUG=false

# =============================================================================
# Elementary Data Monitoring
# =============================================================================
# Slack webhook URL for Elementary alerts
# Get this from your Slack app's Incoming Webhooks configuration
ELEMENTARY_SLACK_WEBHOOK=https://hooks.slack.com/services/YOUR/SLACK/WEBHOOK

# =============================================================================
# CI/CD Settings (for GitHub Actions)
# =============================================================================
# Set to true when running in CI/CD environment
GITHUB_ACTIONS=false

# GitHub repository (automatically set in CI/CD)
GITHUB_REPOSITORY=your_username/your_repo

# GitHub branch (automatically set in CI/CD)
GITHUB_REF=refs/heads/develop

# =============================================================================
# Example configurations for different environments
# =============================================================================

# Development Environment Example:
ENVIRONMENT=dev
SNOWFLAKE_DATABASE=DEV_DATABASE
SNOWFLAKE_WAREHOUSE=DEV_WAREHOUSE
SNOWFLAKE_SCHEMA=DEV_SCHEMA
DBT_TARGET=dev

# Staging Environment Example:
# ENVIRONMENT=staging
# SNOWFLAKE_DATABASE=STAGING_DATABASE
# SNOWFLAKE_WAREHOUSE=STAGING_WAREHOUSE
# SNOWFLAKE_SCHEMA=STAGING_SCHEMA
# DBT_TARGET=test

# Production Environment Example:
# ENVIRONMENT=prod
# SNOWFLAKE_DATABASE=PROD_DATABASE
# SNOWFLAKE_WAREHOUSE=PROD_WAREHOUSE
# SNOWFLAKE_SCHEMA=PROD_SCHEMA
# DBT_TARGET=prod

# =============================================================================
# Snowflake Credentials (Development Only)
# =============================================================================
# For development, you can optionally set credentials here if not using AWS Secrets Manager
# Production and staging environments ALWAYS use AWS Secrets Manager
#
# SNOWFLAKE_USER=your_snowflake_user
# SNOWFLAKE_PRIVATE_KEY=-----BEGIN PRIVATE KEY-----
# [your private key content]
# -----END PRIVATE KEY-----
# SNOWFLAKE_PRIVATE_KEY_PASSPHRASE=your_passphrase_if_key_is_encrypted
# SNOWFLAKE_ROLE=your_role
# SNOWFLAKE_DATABASE=your_database
# SNOWFLAKE_WAREHOUSE=your_warehouse
# SNOWFLAKE_SCHEMA=your_schema
#
# =============================================================================
# Key-Pair Authentication Setup Guide
# =============================================================================
# This project uses key-pair authentication for enhanced security:
# 1. Generate a key pair: openssl genrsa -out snowflake_key.pem 2048
# 2. Generate public key: openssl rsa -in snowflake_key.pem -pubout -out snowflake_key.pub
# 3. Add public key to Snowflake user: ALTER USER YOUR_USER SET RSA_PUBLIC_KEY='your_public_key_content'
# 4. Store private key in AWS Secrets Manager or set SNOWFLAKE_PRIVATE_KEY above for dev
# 5. Test connection: make test-unit
