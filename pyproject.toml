[build-system]
requires = ["setuptools>=65.0.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "data-transformation"
version = "1.0.0"
description = "Production-grade dbt data transformation project"
authors = [
    {name = "Ellen Young", email = "ellen@example.com"}
]
requires-python = ">=3.12"
dependencies = [
    "dbt-core==1.10.11",
    "dbt-snowflake==1.10.2",
    "setuptools>=65.0.0",
    "python-dotenv>=1.0.0",
]

[project.optional-dependencies]
dev = [
    "pre-commit==3.6.0",
    "sqlfluff==3.2.5",
    "sqlfluff-templater-dbt==3.2.5",
    "black==23.12.1",
    "isort==5.13.2",
    "flake8==7.0.0",
    "mypy==1.8.0",
    "pytest==7.4.3",
    "pytest-cov==4.1.0",
    "pyyaml==6.0.1",
]
test = [
    "pytest==7.4.3",
    "pytest-cov==4.1.0",
    "elementary-data[snowflake]==0.13.2",
]

[project.scripts]
env-manager = "scripts.environment_manager:env_manager.print_info"

# Black configuration
[tool.black]
line-length = 88
target-version = ['py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | transform
  | dbt_packages
  | target
  | logs
)/
'''

# isort configuration
[tool.isort]
profile = "black"
line_length = 88
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
skip_glob = ["transform/*", "dbt_packages/*", "target/*", "logs/*"]

# flake8 configuration
[tool.flake8]
max-line-length = 88
extend-ignore = [
    "E203",  # whitespace before ':'
    "E501",  # line too long (handled by black)
    "W503",  # line break before binary operator
    "W504",  # line break after binary operator
]
exclude = [
    ".git",
    "__pycache__",
    "transform",
    "dbt_packages",
    "target",
    "logs",
    ".venv",
    ".tox",
    "build",
    "dist",
]
per-file-ignores = [
    "__init__.py:F401",  # imported but unused
]

# mypy configuration
[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true

[[tool.mypy.overrides]]
module = "boto3.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = [
    "dbt.*",
    "dotenv",
    "yaml",
]
ignore_missing_imports = true

# pytest configuration
[tool.pytest.ini_options]
testpaths = ["tests", "scripts/tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose",
    "--cov=scripts",
    "--cov-report=term-missing",
    "--cov-report=html:htmlcov",
    "--cov-fail-under=0",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

# Coverage configuration
[tool.coverage.run]
source = ["scripts"]
omit = [
    "*/tests/*",
    "*/test_*",
    "transform/*",
    "dbt_packages/*",
    "target/*",
    "logs/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.coverage.html]
directory = "htmlcov"
